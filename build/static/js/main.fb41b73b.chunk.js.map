{"version":3,"sources":["Fire.js","Message.js","MessageList.js","MessageForm.js","Chat.js","App.js","serviceWorker.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","db","database","base","Rebase","createClass","styles","message","display","marginTop","padding","details","flex","paddingLeft","Message","_ref","react_default","a","createElement","className","style","body","Component","messageList","color","paddingBottom","overflowY","roomAnnouncement","h3","fontSize","StyleSheet","create","messageForm","_messageForm","backgroundColor","height","alignItems","border","borderRadius","margin","position","left","bottom","Object","defineProperty","icon","input",":focus","outline","button","paddingRight","borderTopRightRadius","borderBottomRightRadius","Chat","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","textBox","messages","handleChange","bind","assertThisInitialized","handleSubmit","_this2","user","currentUser","setState","room","photoURL","window","alert","location","protocol","host","ref","orderByValue","on","s","val","newState","id","push","e","target","value","preventDefault","sendMessage","shortid","generate","set","email","time","Date","toISOString","text","map","m","renderMessages","onSubmit","type","onChange","fb","list","Map","options","get","concat","IDs","name","roomName","chosenOptions","document","getElementById","natureCount","cityCount","indoorsCount","console","log","i","length","indexOf","Math","floor","random","r","password","username","password2","username2","first","second","third","fourth","fifth","errorMessage","App","props","signedIn","uid","event","newValue","handleSignIn","signInWithEmailAndPassword","catch","error","then","history","getData","userId","once","snapshot","handleSignUp","createUserWithEmailAndPassword","updateProfile","handleUsername","handlePassword","objectSpread","o","key","htmlFor","css","label","defaultValue","disabled","renderOptions","_this3","onAuthStateChanged","authenticated","loading","_this4","_this$state","containBlocks","FadeAnimations2","blocks","placeholder","react_router_dom","html","overflow","FadeAnimations","animationName","animationDuration","textAlign","width","justifyContent","div","top","right","boxSizing","cursor","withRouter","Boolean","hostname","match","createBrowserHistory","data","ReactDOM","render","react_router","exact","path","src_App_0","src_Chat_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb41b73b.chunk.js","sourcesContent":["import firebase from 'firebase'\nimport \"firebase/database\"\nimport \"firebase/auth\"\n\nimport Rebase from \"re-base\";\n// this file takes in the given firebase code and adds your api information onto it\n// then exporting as an authenticated object that you can just call\n\nvar config = {\n    apiKey: \"AIzaSyAgQHIEDXjJaeiJZKbMuxTchYaFLTehH1g\",\n    authDomain: \"meet-the-others.firebaseapp.com\",\n    databaseURL: \"https://meet-the-others.firebaseio.com\",\n    projectId: \"meet-the-others\",\n    storageBucket: \"meet-the-others.appspot.com\",\n    messagingSenderId: \"313507434165\"\n    \n};\nconst app = firebase.initializeApp(config)\n\n// require('firebase/auth') //ADDED THIS LINE FEEL FREE TO CHANGE\n\n\nexport const auth = firebase.auth()\n\nexport const db = firebase.database(app)\nconst base = Rebase.createClass(db)\n\nexport default base;","import React from 'react'\n\n\n// import Avatar from './Avatar'\n// import Metadata from './Metadata'\n\nconst Message = ({ message }) => {\n  return (\n    <div\n      className=\"Message\"\n      style={styles.message}\n    >\n      {/* <Avatar user={message.user} /> */}\n\n      <div style={styles.details}>\n        {/* <Metadata message={message} /> */}\n        <div className=\"body\">\n          {message.body}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst styles = {\n  message: {\n    display: 'flex',\n    marginTop: '1rem',\n    padding: '0 1rem',\n  },\n\n  details: {\n    flex: 1,\n    paddingLeft: '0.5rem',\n  },\n}\n\nexport default Message","import React, {Component} from 'react'\nimport Message from './Message'\n\nclass MessageList extends Component {\ncomponentDidUpdate(prevProps){\n  if(prevProps.messages.length<this.props.messages.length)\n   this.scrollToBottom()\n}\n\nscrollToBottom =() =>{\n  this.messagesEnd.scrollIntoView({behavior:'smooth'})\n}\n\n  render(){\n    const {messages, roomName} = this.props\n    return (\n      <div\n        className=\"MessageList\"\n        style={styles.messageList}\n      >\n        <div\n          className=\"roomAnnouncement\"\n          style={styles.roomAnnouncement}\n        >\n          {/* <h3 style={styles.h3}>\n             #{roomName} \n          </h3>\n          <p>This is the very beginning of the #{roomName}.</p> */}\n        </div>\n\n        {\n          messages.map(msg => (\n            <Message\n              message={msg}\n              key={msg.id}\n            />\n          ))\n        }\n    \n        <div>\n           {el => this.messgaesEnd = el}\n        </div>\n      </div>\n    )\n}\n}\n\nconst styles = {\n  messageList: {\n    // backgroundColor: 'white',\n    color: 'white',\n    flex: 1,\n    paddingBottom: '1rem',\n    overflowY: 'scroll',\n  },\n\n  roomAnnouncement: {\n    padding: '2px 1px',\n  },\n\n  h3: {\n    fontSize: '1.5rem',\n  },\n}\n\nexport default MessageList","import React, { Component } from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport './Chat.css'\n\n\nclass MessageForm extends Component {\n  state = {\n    body: '',\n  }\n\n  handleSubmit = (ev) => {\n    ev.preventDefault()\n    this.props.addMessage(this.state.body)\n    this.setState({ body: '' })\n  }\n\n  handleChange = (ev) => {\n    this.setState({ body: ev.target.value })\n  }\n\n  render() {\n    return (\n      <form\n        className={`MessageForm ${css(styles.messageForm)}`}\n        onSubmit={this.handleSubmit}\n      >\n        <div className={css(styles.icon)}>\n          <i className=\"fas fa-comment-alt\"></i>\n        </div>\n        <input\n          autoFocus\n          required\n          className={css(styles.input)}\n          type=\"text\"\n          name=\"body\"\n          placeholder=\"Type a message...\"\n          value={this.state.body}\n          onChange={this.handleChange}\n        />\n        <button\n          type=\"submit\"\n          className={css(styles.button)}\n        >\n          <i className=\"far fa-paper-plane\" title=\"Send\"></i>\n        </button>\n      </form>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  messageForm: {\n    backgroundColor: 'white',\n    height: '3rem',\n    display: 'flex',\n    alignItems: 'stretch',\n    border: '2px solid #999',\n    borderRadius: '0.5rem',\n    margin: '0.25rem',\n    padding: 0,\n    position: 'fixed',\n    left: '0px',\n    bottom: '0px',\n    height: '30px',\n    width: '100%' ,\n    background: '#999' ,\n  },\n\n  icon: {\n    display: 'flex',\n    borderRadius: '0.5rem',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    color: '#ccc',\n    padding: '0 0.5rem',\n    fontSize: '1.2rem',\n  },\n\n  input: {\n    flex: 1,\n    fontSize: '1.2rem',\n    border: 0,\n\n    ':focus': {\n      outline: 0,\n    },\n  },\n\n  button: {\n    fontSize: '1.5rem',\n    backgroundColor: '#1A8FE3',\n    color: 'white',\n    paddingLeft: '1rem',\n    paddingRight: '1rem',\n    borderTopRightRadius: '0.5rem',\n    borderBottomRightRadius: '0.5rem',\n    border: '1px solid white',\n  }\n})\n\nexport default MessageForm","import React, { Component } from 'react'\nimport { StyleSheet, css } from 'aphrodite';\nimport styled, { keyframes } from 'styled-components';\nimport ChatHeader from './ChatHeader'\nimport MessageList from './MessageList'\nimport MessageForm from './MessageForm'\nimport App from './App'\nimport './Chat.css'\nimport fire from './Fire'\nimport { auth, db } from './Fire'\nimport firebase from 'firebase'\nimport shortid from 'shortid'\n\nclass Chat extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      textBox: '',\n      messages: []\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  componentDidMount() {\n    var user = auth.currentUser\n    if (user) {\n      this.setState({ user: user, room: user.photoURL }) // storing room info in photoURL\n    } else {\n      window.alert(\"Sign in error occured. Please sign in again.\")\n      window.location = window.location.protocol + \"//\" + window.location.host\n    }\n\n    db.ref('messages').orderByValue().on('value', (s) => {\n      var messages = s.val()\n      let newState = []\n      for (let id in messages) {\n        newState.push(messages[id])\n      }\n      this.setState({messages: newState})\n    })\n  }\n\n  handleChange(e) {\n    this.setState({ textBox: e.target.value })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    if (this.state.textBox) {\n      this.sendMessage()\n    }\n  }\n\n  sendMessage() {\n    db.ref('messages/' + shortid.generate()).set({\n      user: this.state.user.email, // users dont have names rn\n      time: new Date().toISOString(),\n      text: this.state.textBox,\n      room: this.state.room\n    })\n  }\n\n  renderMessages() {\n    return this.state.messages.map((m) => (\n      <li>{m.time + \" \" + m.user + \": \" + m.text}</li>\n    ))\n  }\n\n  render() {\n    return (\n      <div style={{backgroundColor: 'white'}}>\n        <ul>{this.renderMessages()}</ul>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" onChange={this.handleChange}></input>\n          <input type=\"submit\" value=\"send\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\n/*\nvar userId = \"\";\n\nclass Chat extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      messages: [],\n    }\n    \n  }\n\n  // ionViewDidLoad(){\n  //   console.log(\"I'M IN HERE\");\n  //   // this.userId = fire.auth().currentUser.uid;\n  // }\n\n  componentDidMount() {\n    //this.syncMessages()\n\n    var user = auth.currentUser\n    if (user) {\n      this.setState({ room: user.photoURL }) // storing room info in photoURL\n    } else {\n      window.alert(\"Sign in error occured. Please sign in again.\")\n      window.location = window.location.protocol + \"//\" + window.location.host\n    }\n    \n    var sampleMessage = {\n      id: shortid.generate(),\n      user: user.email, // users dont have names rn\n      time: new Date().toISOString(),\n      text: \"hello world\",\n      room: \"city\"\n    }\n    db.ref('messages/' + sampleMessage.id).set({\n      user: sampleMessage.user,\n      time: sampleMessage.time,\n      text: sampleMessage.text,\n      room: sampleMessage.room\n    })\n  }\n\n  componentDidUpdate(prevProps, _prevState, _snapshot) {\n    if (prevProps.roomName !== this.props.room) {\n      this.syncMessages()\n    }\n  }\n\n  componentWillUnmount() {\n    fire.removeBinding(this.messagesRef)\n  }\n\n  syncMessages = () => {\n    //Stop syncing with the current endpoint\n    if (this.messagesRef) {\n      fire.removeBinding(this.messagesRef)\n    }\n    this.messagesRef = fire.syncState(\n      `messages/${this.props.roomName}`,\n      {\n        context: this,\n        state: 'messages',\n        asArray: true,\n      }\n    )\n  }\n\n  addMessage = (body) => {\n\n    const messages = [...this.state.messages]\n    //const user =  firebase.auth.id;\n    const user = auth.currentUser\n    console.log(\"this.props.user is \" + user);\n\n\n    console.log(\"user is \" + user);\n    messages.push({\n      // id: `${user.uid}-${Date.now()}`,\n      user,\n      body,\n      createdAt: Date.now(),\n    })\n\n    console.log(\"message length is \" + messages.length + \"and messages is\" + messages[1]);\n\n    this.setState({ messages })\n  }\n\n  render() {\n    // {this.ionViewDidLoad()};\n    // console.log(\"room is  \" +  this.props)\n    return (\n      <div className={css(styles.body)}>\n        <div className=\"Chat\" className={css(styles.style)}>\n          {<ChatHeader\n            room={this.props.roomName}\n          />}\n          <MessageList\n            messages={this.state.messages}\n\n            room={this.props.roomName}\n          />\n          <MessageForm addMessage={this.addMessage} />\n        </div>\n\n      </div>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n\n  body: {\n    backgroundColor: 'black',\n    // overflow: 'auto',\n    overflow: 'hidden',\n  },\n\n  style: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n  },\n})\n*/\nexport default Chat","import React, { Component } from 'react';\nimport fb from 'firebase'\nimport \"firebase/database\"\nimport \"firebase/auth\"\n\n// import logo from './logo.svg';\nimport './App.css';\nimport { StyleSheet, css } from 'aphrodite';\nimport styled, { keyframes } from 'styled-components';\nimport { inherits } from 'util';\nimport { withRouter } from 'react-router-dom';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { Switch, Redirect } from 'react-router-dom'\nimport { auth } from './Fire'\nimport firebase from './Fire'; // use this when database is implemented\nimport Chat from \"./Chat\";\nimport login from \"./App\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { app } from 'firebase';\nimport { EventEmitter } from 'events';\n\n\n// experimental db stuff\n///* //Start of comments\nvar db = fb.database()\n// var aut = firebase.auth()\n// var username = \"Username\";\n// var password = \"Password\";\n// current structure:\n//   username  (string)\n//   password  (string)\n//   interests (string[5])\n\n\n// idk how firebase works so im gonna use this to test it out\n/*\nvar createUser = (username, password, interests) => {\n  var lukepassword = db.ref('users/lukecheng/password')\n  lukepassword.on('value', (p) => {\n    window.alert(p)\n  })\n}\n*/\n// \n\n\n/*SIGN IN*/\n//We will have to get this from the data base itself, and set vars accordingly and then compare with the input some how\n\n//check if passwords match\n// auth.signInWithEmailAndPassword(username, password).catch(function(error){\n//   var errorCode = error.code;\n//   var errorMessage = error.message;\n//   console.log(errorCode);\n//   console.log(errorMessage);\n// })\n// /*SIGN OUT*/\n// aut.signOut().then(function(){\n//   //Signout successful\n//   console.log(\"Signed out!\");\n\n// }).catch(function(error){\n//   console.log(error);\n// })\n// //*/ //End of the comments\n\nvar list = new Map([[\"nature\", [\"farms\", \"parks\", \"nature trails\", \"exercising\", \"beaches\", \"hikes\", \"biking\", \"running\", \"outdoor games (i.e. hide and seek, tag, etc.)\", \"outdoor sports (i.e. football, basketball, etc.)\", \"road trips\"]],\n[\"city\", [\"shopping\", \"clubs\", \"bars\", \"lounges\", \"restaurants\", \"museums\", \"concerts\"]],\n[\"indoors\", [\"movies/TV shows\", \"board games\", \"watching random videos\", \"forums\", \"sleeping\", \"reading\", \"cooking\", \"personal projects\", \"Conversation Games (i.e. Never Have I ever, Truth or Dare)\"]]]);\n\nvar options = (list.get(\"nature\").concat(list.get(\"city\"))).concat(list.get(\"indoors\"));\n\nvar IDs = [\"first\", \"second\", \"third\", \"fourth\", \"fifth\"]; //five options to fill\n//var roomName = \"nature\";\n// console.log(list.get(\"nature\"));\n\n//determines the roomname of the room the user will be redirected to \nfunction name() {\n  let roomName\n  var chosenOptions = [document.getElementById(\"first\").value, document.getElementById(\"second\").value\n    , document.getElementById(\"third\").value, document.getElementById(\"fourth\").value,\n  document.getElementById(\"fifth\").value]\n  var natureCount = 0, cityCount = 0, indoorsCount = 0;\n  console.log(list.get(\"nature\"));\n  for (var i = 0; i < chosenOptions.length; i++) {\n    if (list.get(\"nature\").indexOf(chosenOptions[i]) >= 0) {\n      natureCount++;\n    } else if (list.get(\"city\").indexOf(chosenOptions[i]) >= 0) {\n      cityCount++;\n    } else { //indoors\n      indoorsCount++;\n    }\n  }\n\n  if (natureCount >= 3) {//nature is the most\n    roomName = \"nature\";\n  } else if (cityCount >= 3) {//city is the most\n    roomName = \"city\";\n  } else if (indoorsCount >= 3) {//indoors is the most\n    roomName = \"indoors\";\n  } else { //all other cases\n    var room = Math.floor(Math.random() * 2); //generates a number from 0 (inclusive) to 1 (inclusive)\n    if (cityCount === natureCount && cityCount >= indoorsCount) {\n      if (room === 0) {\n        roomName = \"city\";\n      } else {\n        roomName = \"nature\";\n      }\n    } else if (cityCount === indoorsCount && cityCount >= natureCount) {\n      if (room === 0) {\n        roomName = \"city\";\n      } else {\n        roomName = \"indoors\";\n      }\n    } else if (natureCount === indoorsCount && natureCount >= cityCount) {\n      if (room === 0) {\n        roomName = \"nature\";\n      } else {\n        roomName = \"indoors\";\n      }\n    } else { //all three are randomly scattered (not gonna happen)\n      var r = Math.floor(Math.random() * 3); //generates a number from 0 (inclusive) to 2 (inclusive)\n      if (r === 0) {\n        roomName = \"nature\";\n      } else if (r == 1) {\n        roomName = \"indoors\";\n      } else {\n        roomName = \"city\";\n      }\n    }\n  }\n  return roomName\n}\n\n\nconst state = {\n  password: \"\",\n  username: \"\",\n  password2: \"\",\n  username2: \"\",\n  first: \"\",\n  second: \"\",\n  third: \"\",\n  fourth: \"\",\n  fifth: \"\",\n  errorMessage: null,\n}\n\n// console.log(\"jdksaljdlas\");\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n    this.state = {\n      ...state\n    }\n  }\n\n  signedIn = () => {\n    return this.state.user.uid\n  }\n\n  handleChange = (event) => {\n    const newValue = {}\n    newValue[event.target.name] = event.target.value\n    this.setState(newValue)\n  }\n\n  handleSignIn = (event) => {\n    event.preventDefault();\n    \n    auth\n      .signInWithEmailAndPassword(this.state.username2, this.state.password2)\n      .catch((error) => {\n        window.alert(error)\n        this.setState({ errorMessage: \"Invalid signin\" })\n      })\n      .then((e) => {\n        console.log(\"signed in\")\n        console.log(auth.currentUser)\n        this.props.history.push('Chat')\n        //window.location = window.location.protocol + \"//\" + window.location.host + \"/Chat\"\n      })\n  }\n\n  getData = (event) => {\n    var userId = firebase.auth().currentUser.uid;\n    return firebase.database().ref('/users/' + userId).once('value').then(function(snapshot) {\n\n    })\n  }\n\n  handleSignUp = (event) => {\n    event.preventDefault();\n    \n    auth\n      .createUserWithEmailAndPassword(this.state.username, this.state.password)\n      .catch(error => this.setState({ errorMessage: \"Invalid Signup\" }))\n      .then(() => {\n        //console.log(\"test\")\n        //this.setState({...this.state})\n        // not the best approach but it'll do for now\n        auth\n        .signInWithEmailAndPassword(this.state.username, this.state.password)\n        .catch(error => { console.log(error) })\n        .then(() => {\n          auth.currentUser.updateProfile({\n            photoURL: name()\n          })\n          .catch(error => {\n            console.log(error)\n          })\n          .then((e) => {\n            this.props.history.push('Chat')\n          })\n        })\n      })\n      /* useless code\n    this.setState({ first: event.target.first.value })\n    this.setState({ second: event.target.second.value })\n    this.setState({ third: event.target.third.value })\n    this.setState({ fourth: event.target.fourth.value })\n    this.setState({ fifth: event.target.fifth.value })\n    */\n  }\n\n\n  //const {username, password} = event.target.id\n  // try {\n  //   const user = await login.auth.signInWithEmailAndPassword(username.value, password.value)\n  //   this.props.history.push(\"/\");\n  // }catch (error){\n  //   alert(error)\n  // };\n\n  handleUsername = (event) => {\n    //console.log(event.target.id + \" and the value is \" + event.target.value)\n    this.setState({ [event.target.id]: event.target.value });\n  }\n  handlePassword = (event) => {\n    //console.log(event.target.id + \" and the value is \" + event.target.value)\n    this.setState({ [event.target.id]: event.target.value });\n  }\n\n  /*\n  handleSubmit = (event) => {\n    event.preventDefault();\n    //console.log(this.state)\n    name(); //get the roomname user will be assigned to\n    console.log(\"this is the room \" + roomName.value);\n\n    this.props.history.push(\"/Chat\");\n  }\n  */\n\n  renderOptions() {\n    return options.map((o) => (\n      <option key={o} value={o}>{o}</option>\n    ))\n  }\n\n  renderSelects() {\n    return IDs.map((id) => (\n      <div key={id}>\n        <label htmlFor={id} className={css(styles.label)}>{id}</label>\n        <select id={id} className={css(styles.input)}>\n          <option defaultValue disabled>Please select an option: </option>\n          {this.renderOptions()}\n        </select>\n      </div>\n    ))\n  }\n\n\n\n  componentWillMount() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          currentUser: user,\n          loading: false\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          currentUser: null,\n          loading: false\n        });\n      }\n    });\n  }\n\n  render() {\n    const { first, second, third, fourth, fifth, password, username, errorMessage } = this.state;\n    // function writeUserData(username, password) {\n    //   firebase.database().ref('users/' + username).set\n    // }\n    return (\n\n      <div className={css(styles.body)}>\n        {/* <p className = {css(styles.FadeAnimations)}> Welcome!</p> */}\n        <div className={css(styles.containBlocks)}>\n          <p className={css(styles.FadeAnimations2)}>New User? Start here!</p>\n          <p className={css(styles.FadeAnimations2)}>Already have an account? Login here!</p>\n        </div>\n\n        <div className={css(styles.containBlocks)}>\n          <div className={css(styles.blocks)}>\n            <form onSubmit={(e) => this.handleSignUp(e)}>\n              <p className={css(styles.label)}> What do you like to do in the weekend?</p>\n\n              <label htmlFor=\"fname\" className={css(styles.label)}>Choose a username!</label>\n              <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Username\" className={css(styles.input)} onChange={this.handleUsername}></input>\n\n              <label htmlFor=\"password\" className={css(styles.label)}>Create a password!</label>\n              <input type=\"password\" className={css(styles.input)} onChange={this.handlePassword} id=\"password\" name=\"password\" placeholder=\"password\"></input>\n\n              <label htmlFor=\"first\" className={css(styles.label)}>First</label>\n              <select id=\"first\" className={css(styles.input)} defaultValue=\"concerts\" onChange={this.handleChange} >\n                {\n                  options.map((id) =>\n                    <option value={id}>{id}</option>)\n                }\n              </select>\n\n              <label htmlFor=\"second\" className={css(styles.label)}>Second</label>\n              <select id=\"second\" className={css(styles.input)} defaultValue=\"biking\" onChange={this.handleChange}>\n                {\n                  options.map((id) =>\n                    <option value={id}>{id}</option>)\n                }\n              </select>\n\n              <label htmlFor=\"third\" className={css(styles.label)}>Third</label>\n              <select id=\"third\" className={css(styles.input)} defaultValue=\"lounges\" onChange={this.handleChange}>\n                {\n                  options.map((id) =>\n                    <option value={id}>{id}</option>)\n                }\n              </select>\n\n              <label htmlFor=\"fourth\" className={css(styles.label)}>Fourth</label>\n              <select id=\"fourth\" className={css(styles.input)} defaultValue=\"running\" onChange={this.handleChange}>\n                {\n                  options.map((id) =>\n                    <option value={id}>{id}</option>)\n                }\n              </select>\n\n              <label htmlFor=\"fifth\" className={css(styles.label)}>Fifth</label>\n              <select id=\"fifth\" className={css(styles.input)} defaultValue=\"museums\" onChange={this.handleChange}>\n                {\n                  options.map((id) =>\n                    <option value={id}>{id}</option>)\n                }\n              </select>\n              <input type=\"submit\" value=\"Submit\" />\n              <Router>\n                <div>\n\n                </div>\n              </Router>\n            </form>\n          </div>\n          <div className={css(styles.blocks)}>\n            <form onSubmit={(e) => this.handleSignIn(e)}>\n              <label htmlFor=\"username\" className={css(styles.label)}>\n                Username\n                <input \n                  type=\"text\"\n                  id=\"username2\"\n                  placeholder=\"Username\"\n                  className={css(styles.input)}\n                  value={this.state.username2}\n                  onChange={this.handleUsername} />\n              </label>\n              <label htmlFor=\"password\" className={css(styles.label)}>\n                Password\n                <input\n                  type=\"password\"\n                  id=\"password2\"\n                  placeholder=\"Password\"\n                  className={css(styles.input)} \n                  value={this.state.password2}\n                  onChange={this.handlePassword}\n                  />\n              </label>\n              <input type=\"submit\" value=\"Sign in\" />\n              {/* <Router>\n                <div>\n\n                  <Route\n                    exact path=\"/\"\n                    component={Chat}\n                    render={() => (\n                      this.signedIn()\n                        ? <Redirect to=\"/Chat\" />\n                        : <Redirect to=\"/\" />\n                    )} />\n                </div>\n              </Router> */}\n            </form>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst styles = StyleSheet.create({\n\n  html: {\n    backgroundColor: 'black',\n    overflow: 'hidden',\n  },\n\n  body: {\n    // backgroundColor: 'black',\n    // overflow: 'auto',\n    overflow: 'hidden',\n  },\n\n  FadeAnimations: {\n    animationName: 'fadein',\n    animationDuration: '3s',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: '80px',\n    width: '100%',\n    padding: '10px',\n  },\n\n  FadeAnimations2: {\n    animationName: 'fadein',\n    animationDuration: '5s',\n    textAlign: 'center',\n    color: '#4c3a1f',\n    fontSize: '30px',\n    paddingLeft: '20px',\n    paddingRight: '20px',\n    width: '40%',\n  },\n\n  blocks: {\n    animationName: 'fadein',\n    animationDuration: '3s',\n    display: 'inline-block',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: '30px',\n    width: '40%',\n    height: '20%',\n    overflow: 'auto',\n    // float: 'left',\n    paddingLeft: '20px',\n    paddingRight: '20px',\n    borderRadius: '5px',\n    // height: '50vh',\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n\n  containBlocks: {\n    display: 'flex',\n    paddingLeft: '30px',\n    paddingRight: '30px',\n    paddingBottom: '30px',\n    justifyContent: 'space-between',\n    position: 'relative',\n    // backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n\n  div: {\n    // width: '75%',\n    // height: '75%',\n\n    position: 'absolute',\n    top: '0',\n    bottom: '0',\n    left: '0',\n    right: '0',\n\n    margin: 'auto',\n    // overflow: 'hidden',\n  },\n\n  input: {\n    width: '100%',\n    padding: '20px',\n    margin: '8px 0',\n    display: 'inline-block',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n    boxSizing: 'border-box',\n    // overflow: 'hidden',\n\n  },\n\n  button: {\n    width: '100%',\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    padding: '10px',\n    margin: '8px 0',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    // overflow: 'hidden',\n  },\n\n  label: {\n    color: '#C0C0C0',\n    fontSize: '30px',\n    padding: '20px',\n  },\n\n\n})\n//ReactDOM.render(app, document.getElementById('../src/App.js'));\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport app from \"firebase\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Chat from './Chat';\nimport {BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport {createBrowserHistory} from \"history\"\nconst history = createBrowserHistory()\n\n//ReactDOM.render(<Chat />, document.getElementById('root'))\nconst data = {};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nfunction Wrapper(props) {\n    return (\n        <Router history = {history}>\n            <div>\n                <Route exact path=\"/\" render={(props) =>\n                    <App history={history} data={data} />  \n                }/>\n                <Route exact path=\"/Chat\" render={(props) =>\n                    <Chat history={history} data={data} />   \n                }/>\n            </div>\n        </Router>\n    )\n}\n\nReactDOM.render(Wrapper(), document.getElementById('root'));\nserviceWorker.unregister();\n\n\n//have the class here \n"],"sourceRoot":""}